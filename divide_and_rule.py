'''

Разделяй и властвуй - это НЕ алгоритм, а ПОДХОД к решению задачи, так как он может применяться
для широкого спектра задач.
Суть:
1) Для задачи определяется базовый случай - самый простой. Например, для задачи подсчета суммы
элементов в массиве, базовый случай - один или ноль элементов
2) Задача делится до тех пор, пока не будет достигнут базовый случай.

Алгоритм Евклида для нахождения наибольшего общего делителя - пример
Алгоритм бинарного поиска - пример

'''

# функция нахождения НОД для двух чисел
def NOD(x, y):
    # базовый случай
    if x == 0:
        return y
    # базовый случай
    if y == 0:
        return x
    # рекурсивный случай
    else:
        left = x % y
        return NOD(y, left)

print(NOD(5, 10))

# функция нахождения суммы массива через рекурсию
def sum(arr):
    # базовый случай
    if arr == []:
        return 0
    # рекурсивный случай
    else:
        return arr[0] + sum(arr[1:])

print(sum([5,5,5,5,5]))

# функция для подсчета количества элементов в списке
def count(arr):
    if arr == []:
        return 0
    else:
        return count(arr[1:]) + 1

print(count([1,2,3,4,5,6,7,8,9,10]))

# функция для нахождения максимума массива
def max(arr):
    if len(arr) == 2:
        return arr[0] if arr[0] > arr[1] else arr[1]
    else:
        return max(arr[1:]) if max(arr[1:]) > arr[0] else arr[0]

print(max([1,2,3,4,5,576,7,8,9,10]))