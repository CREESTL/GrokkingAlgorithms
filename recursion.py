'''
"Циклы могут ускорить работу программы. Рекурсия может ускорить работу программиста."
'''

# Часть 1
# Для начала рассмотрим стек вызовов обычных функций
# -вниз стека кладется фукнция greet и начинает выполнятся
# -она приостанавливается и сверху на нее кладется фунция greet2
# -функция greet2 полностью выполняется, убирается с вершины стека
# -функция greet продолжает работу
# -она снова приостанавливается и сверху на нее кладется функция bye
# -функция bye полностью выполняется, убирается с вершины стека
# -функция greet полностью выполняется, стек очищается
def greet(name):
    print(f"Hello, {name}!")
    greet2(name)
    print("*getting ready to say bye...*")
    bye(name)

def greet2(name):
    print(f"How do you do, {name}")

def bye(name):
    print(f"Bye, {name}")
greet("Katya")

# Часть 2
# стек будет выглядеть так
# ---factorial(1)
# ---factorial(2)
# ---factorial(3)
# ---factorial(4)
# ---factorial(5) <- основание
# на момент вызова factorial(1) функция factorial(5) до сих пор в "подвешенном состоянии"
# первой управление вернет factorial(1), после чего весь стек сверху разберется

def factorial(x):
    if x != 1:
        return x * factorial(x - 1)  # рекурсивный случай
    else:
        return x # базовый случай
print(factorial(5))